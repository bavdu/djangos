# Generated by Django 2.2 on 2020-02-26 13:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Asset_Type', models.CharField(choices=[('server device', '服务器'), ('network device', '网络设备'), ('strong device', '存储设备'), ('security device', '安全设备'), ('software', '软件资产')], default='server device', max_length=64, verbose_name='资产类型')),
                ('Asset_Name', models.CharField(max_length=64, unique=True, verbose_name='资产名称')),
                ('Asset_Serial_Number', models.CharField(max_length=128, unique=True, verbose_name='资产序列号')),
                ('Asset_Status', models.SmallIntegerField(choices=[(0, 'online'), (1, 'offline'), (2, 'unknown'), (3, 'error'), (4, 'backup')], default=0, verbose_name='资产状态')),
                ('Manage_IP', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理IP地址')),
                ('Asset_Purchase', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('Asset_Expire', models.DateField(blank=True, null=True, verbose_name='过保日期')),
                ('Asset_Price', models.FloatField(blank=True, null=True, verbose_name='资产价格')),
                ('Asset_Ratify', models.DateTimeField(auto_now_add=True, verbose_name='批准日期')),
                ('Asset_Update', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('Remark_Info', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('Asset_Approved', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved', to=settings.AUTH_USER_MODEL, verbose_name='资产审计者')),
            ],
            options={
                'verbose_name': ('资产总表',),
                'ordering': ['-Asset_Ratify'],
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=64, unique=True, verbose_name='业务线名')),
                ('remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '业务线',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idc_name', models.CharField(max_length=64, unique=True, verbose_name='IDC机房名称')),
                ('remark', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': 'IDC机房',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer_name', models.CharField(max_length=64, unique=True, verbose_name='服务器厂商')),
                ('manufacturer_phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='支持电话')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '服务器厂商信息',
            },
        ),
        migrations.CreateModel(
            name='NewAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=128, unique=True, verbose_name='资产序列号')),
                ('asset_type', models.CharField(blank=True, choices=[('server', '服务器'), ('network device', '网络设备'), ('storage device', '存储设备'), ('security device', '安全设备'), ('software', '软件资产')], default='server', max_length=64, null=True, verbose_name='资产类型')),
                ('manufacturer', models.CharField(blank=True, max_length=64, null=True, verbose_name='生产厂商')),
                ('model_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='型号')),
                ('ram_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='内存大小')),
                ('cpu_model', models.CharField(blank=True, max_length=128, null=True, verbose_name='CPU型号')),
                ('cpu_count', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='CPU物理数量')),
                ('cpu_core_count', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='CPU核心数量')),
                ('os_distribution', models.CharField(blank=True, max_length=64, null=True, verbose_name='发行商')),
                ('os_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统类型')),
                ('os_release', models.CharField(blank=True, max_length=64, null=True, verbose_name='操作系统版本号')),
                ('data', models.TextField(verbose_name='资产数据')),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='汇报日期')),
                ('m_time', models.DateTimeField(auto_now=True, verbose_name='数据更新日期')),
                ('approved', models.BooleanField(default=False, verbose_name='是否批准')),
            ],
            options={
                'verbose_name': '新上线待批准资产',
                'ordering': ['-c_time'],
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('software_type', models.SmallIntegerField(choices=[(0, '操作系统'), (1, '办公\\开发软件'), (2, '业务软件')], default=0, verbose_name='软件类型')),
                ('licence_number', models.SmallIntegerField(default=1, verbose_name='授权数量')),
                ('version_info', models.CharField(help_text='example: RedHat Enterprise 7.4 release', max_length=64, unique=True, verbose_name='版本信息')),
            ],
            options={
                'verbose_name': '软件信息',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags_name', models.CharField(max_length=30, unique=True, verbose_name='标签')),
                ('create_Date', models.DateField(auto_now_add=True, verbose_name='创建日期')),
            ],
            options={
                'verbose_name': '标签',
            },
        ),
        migrations.CreateModel(
            name='StrongDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strong_type', models.SmallIntegerField(choices=[(0, '磁盘阵列'), (1, '网络存储器'), (2, '磁带库'), (4, '磁带机')], default=0, verbose_name='设备类型')),
                ('model_number', models.CharField(default='unknown', max_length=128, verbose_name='设备型号')),
                ('Asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '存储设备',
            },
        ),
        migrations.CreateModel(
            name='Servers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_type', models.SmallIntegerField(choices=[(0, 'PC服务器'), (1, '刀片机'), (2, '小型机')], default=0, verbose_name='服务器类型')),
                ('create_type', models.CharField(choices=[('auto', '自动添加'), ('manual', '手动添加')], default='auto', max_length=32, verbose_name='创建类型')),
                ('model_serial', models.CharField(blank=True, max_length=128, null=True, verbose_name='服务器型号')),
                ('raid_type', models.CharField(blank=True, max_length=512, null=True, verbose_name='RAID类型')),
                ('os_type', models.CharField(blank=True, max_length=64, null=True, verbose_name='操作系统类型')),
                ('os_publisher', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统发行商')),
                ('os_release', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统版本')),
                ('Asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '服务器',
            },
        ),
        migrations.CreateModel(
            name='SecurityDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('security_type', models.SmallIntegerField(choices=[(0, '防火墙'), (1, '入侵检测设备'), (2, '互联网网关'), (4, '运维审计系统')], default=0, verbose_name='安全设备类型')),
                ('model_number', models.CharField(default='unknown', max_length=128, verbose_name='设备型号')),
                ('Asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '安全设备',
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_type', models.SmallIntegerField(choices=[(0, '路由器'), (1, '交换机'), (2, '负载均衡'), (4, 'VPN设备')], default=0, verbose_name='网络设备类型')),
                ('vlan_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='LAN区的IP地址')),
                ('intranet_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='内网IP地址')),
                ('model_number', models.CharField(default='unknown', max_length=128, verbose_name='设备型号')),
                ('firmware_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='设备固件号')),
                ('port_number', models.SmallIntegerField(blank=True, null=True, verbose_name='端口数量')),
                ('device_detail', models.TextField(blank=True, null=True, verbose_name='配置信息')),
                ('Asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '网络设备',
            },
        ),
        migrations.CreateModel(
            name='Eventlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=128, verbose_name='事件名字')),
                ('event_type', models.SmallIntegerField(choices=[(0, '其它'), (1, '硬件变更'), (2, '新增配件'), (3, '设备下线'), (4, '设备上线'), (5, '定期维护'), (6, '业务上线\\更新\\变更')], default=4, verbose_name='事件类型')),
                ('component', models.CharField(blank=True, max_length=256, null=True, verbose_name='事件子项')),
                ('detail', models.TextField(verbose_name='事件详情')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='事件时间')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('Asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Assets')),
                ('new_asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.NewAssets')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='事件执行人')),
            ],
        ),
        migrations.CreateModel(
            name='Cpu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_model', models.CharField(blank=True, max_length=128, null=True, verbose_name='cpu型号')),
                ('cpu_count', models.PositiveSmallIntegerField(default=1, verbose_name='cpu数量')),
                ('cpu_core_count', models.PositiveSmallIntegerField(default=1, verbose_name='cpu核心数')),
                ('Asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': 'cpu信息',
            },
        ),
        migrations.AddField(
            model_name='assets',
            name='Asset_IDC',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.IDC', verbose_name='所属机房'),
        ),
        migrations.AddField(
            model_name='assets',
            name='Asset_Managers',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin', to=settings.AUTH_USER_MODEL, verbose_name='资产管理者'),
        ),
        migrations.AddField(
            model_name='assets',
            name='Asset_Manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Manufacturer', verbose_name='资产制造商'),
        ),
        migrations.AddField(
            model_name='assets',
            name='Asset_Of_Business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Business'),
        ),
        migrations.AddField(
            model_name='assets',
            name='Asset_Tags',
            field=models.ManyToManyField(blank=True, to='assets.Tags', verbose_name='资产标签'),
        ),
        migrations.CreateModel(
            name='Nic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nic_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='网卡名称')),
                ('nic_model_number', models.CharField(max_length=128, verbose_name='网卡型号')),
                ('nic_mac', models.CharField(max_length=64, verbose_name='网卡MAC地址')),
                ('nic_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='网卡IP地址')),
                ('nic_prefix', models.CharField(blank=True, max_length=64, null=True, verbose_name='网卡掩码')),
                ('bond_ip', models.CharField(blank=True, max_length=64, null=True, verbose_name='绑定地址')),
                ('Asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '网卡',
                'unique_together': {('Asset', 'nic_model_number', 'nic_mac')},
            },
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='内存设备号')),
                ('model_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='内存型号')),
                ('manufacturer', models.CharField(blank=True, max_length=128, null=True, verbose_name='内存制造商')),
                ('slot', models.CharField(max_length=64, verbose_name='插槽')),
                ('size', models.IntegerField(blank=True, null=True, verbose_name='单位GB')),
                ('Asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '内存信息',
                'unique_together': {('Asset', 'slot')},
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=128, verbose_name='磁盘序列号')),
                ('slot', models.CharField(blank=True, max_length=64, null=True, verbose_name='磁盘插槽')),
                ('model_number', models.CharField(blank=True, max_length=128, null=True, verbose_name='磁盘型号')),
                ('manufacturer', models.CharField(blank=True, max_length=128, null=True, verbose_name='磁盘制造商')),
                ('size', models.CharField(blank=True, max_length=64, null=True, verbose_name='磁盘大小')),
                ('interface_type', models.CharField(choices=[('SATA', 'SATA'), ('SAS', 'SAS'), ('SCSI', 'SCSI'), ('SSD', 'SSD'), ('unknown', 'unknown')], default='unknown', max_length=16, verbose_name='磁盘接口类型')),
                ('Asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '磁盘信息',
                'unique_together': {('Asset', 'serial_number')},
            },
        ),
    ]
